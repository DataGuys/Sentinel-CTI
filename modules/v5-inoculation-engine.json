{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for resource naming"
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Environment (prod, dev, test)"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "managedIdentityId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of managed identity"
      }
    },
    "logAnalyticsConnectionId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of Log Analytics Data Collector connection"
      }
    },
    "logAnalyticsQueryConnectionId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of Log Analytics Query connection"
      }
    },
    "ctiWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of Log Analytics workspace"
      }
    },
    "ctiWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of Log Analytics workspace"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of Key Vault"
      }
    },
    "emailNotificationAddress": {
      "type": "string",
      "defaultValue": "securityteam@contoso.com",
      "metadata": {
        "description": "Email address for approval notifications"
      }
    },
    "sla": {
      "type": "object",
      "defaultValue": {
        "approvalTimeMinutes": 120,
        "criticalApprovalTimeMinutes": 30
      },
      "metadata": {
        "description": "SLA configuration for approval workflows"
      }
    },
    "enableSecurityCopilot": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable integration with Microsoft Security Copilot"
      }
    },
    "dceNameForCopilot": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-dce-copilot-', parameters('environment'))]",
      "metadata": {
        "description": "Name for the Data Collection Endpoint for Security Copilot"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to resources"
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable telemetry collection"
      }
    },
    "enableAutoScaling": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable auto-scaling for Logic Apps"
      }
    },
    "maxRetryCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Maximum retry count for operations"
      }
    }
  },
  "variables": {
    "inoculationEngineName": "[concat(parameters('prefix'), '-InoculationEngine-', parameters('environment'))]",
    "approvalWorkflowName": "[concat(parameters('prefix'), '-IndicatorApproval-', parameters('environment'))]",
    "dashboardName": "[concat(parameters('prefix'), '-InoculationEngine-Dashboard-', parameters('environment'))]",
    "office365ConnectionName": "[concat('office365-', parameters('environment'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('inoculationEngineName')]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('Component', 'Inoculation Engine', 'Version', 'V5'))]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceName": {
              "defaultValue": "[parameters('ctiWorkspaceName')]",
              "type": "String"
            },
            "maxRetryCount": {
              "defaultValue": "[parameters('maxRetryCount')]",
              "type": "Int"
            },
            "telemetryEnabled": {
              "defaultValue": "[parameters('enableTelemetry')]",
              "type": "Bool"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 5
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Initialize_Variables": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "allPlatforms",
                    "type": "array",
                    "value": [
                      "Microsoft Defender XDR",
                      "Microsoft Sentinel",
                      "Exchange Online",
                      "Microsoft Security Copilot",
                      "Entra ID",
                      "AWS Security Hub",
                      "AWS Network Firewall",
                      "AWS WAF",
                      "GCP Security Command Center",
                      "GCP Cloud Armor",
                      "Palo Alto",
                      "Cisco",
                      "Fortinet",
                      "Check Point",
                      "CrowdStrike",
                      "Carbon Black",
                      "SentinelOne"
                    ]
                  },
                  {
                    "name": "processingErrors",
                    "type": "array",
                    "value": []
                  },
                  {
                    "name": "retryCount",
                    "type": "integer",
                    "value": 0
                  },
                  {
                    "name": "processingMetrics",
                    "type": "object",
                    "value": {
                      "totalProcessed": 0,
                      "successCount": 0,
                      "errorCount": 0,
                      "tierOneCount": 0,
                      "tierTwoCount": 0,
                      "tierThreeCount": 0,
                      "startTime": "@{utcNow()}"
                    }
                  }
                ]
              }
            },
            "Check_Environment_Health": {
              "runAfter": {
                "Initialize_Variables": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "https://@{workflow().name}.azurewebsites.net/runtime/webhooks/workflow/api/management/workflows/@{workflow().name}/health",
                "authentication": {
                  "type": "ManagedServiceIdentity",
                  "identity": "[parameters('managedIdentityId')]"
                }
              }
            },
            "Verify_Health_Status": {
              "runAfter": {
                "Check_Environment_Health": [
                  "Succeeded"
                ]
              },
              "type": "If",
              "expression": {
                "equals": [
                  "@body('Check_Environment_Health').status",
                  "Healthy"
                ]
              },
              "actions": {
                "Get_New_Indicators": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "CTI_ThreatIntelIndicator_CL \n| where TimeGenerated > ago(15m) and Active_b == true and isnotempty(Value_s)\n| where isempty(EnforcementStatus_s) or EnforcementStatus_s == \"Pending\"\n| project TimeGenerated, Type_s, Value_s, Name_s, Description_s, Action_s, Confidence_d, \nValidFrom_t, ValidUntil_t, TLP_s, ThreatType_s, DistributionTargets_s, IndicatorId_g, \nRiskScore_d, EnforcementStatus_s",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/queryData",
                    "queries": {
                      "resourcegroups": "[resourceGroup().name]",
                      "resourcename": "@{parameters('workspaceName')}",
                      "resourcetype": "Log Analytics Workspace",
                      "subscriptions": "[subscription().subscriptionId]",
                      "timerange": "Last 15 minutes"
                    }
                  },
                  "retryPolicy": {
                    "type": "fixed",
                    "count": "@parameters('maxRetryCount')",
                    "interval": "PT30S"
                  }
                },
                "Set_Processing_Count": {
                  "runAfter": {
                    "Get_New_Indicators": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "processingMetrics",
                    "value": {
                      "totalProcessed": "@length(body('Get_New_Indicators').tables[0].rows)",
                      "successCount": 0,
                      "errorCount": 0,
                      "tierOneCount": 0,
                      "tierTwoCount": 0,
                      "tierThreeCount": 0,
                      "startTime": "@{variables('processingMetrics').startTime}"
                    }
                  }
                },
                "For_Each_Indicator": {
                  "foreach": "@body('Get_New_Indicators').tables[0].rows",
                  "actions": {
                    "Process_Tier1_Indicators": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "greaterOrEquals": [
                              "@item()[6]",
                              85
                            ]
                          },
                          {
                            "or": [
                              {
                                "equals": [
                                  "@item()[9]",
                                  "TLP:GREEN"
                                ]
                              },
                              {
                                "equals": [
                                  "@item()[9]",
                                  "TLP:WHITE"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Set_Enforcement_Status_Processing": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "let indicatorId = \"@{item()[12]}\";\nlet now = now();\nCTI_ThreatIntelIndicator_CL\n| where IndicatorId_g == indicatorId\n| extend EnforcementStatus_s = \"Processing\"\n| extend UpdatedTimeUtc_t = now",
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/api/logs"
                          }
                        },
                        "Increment_Tier_One_Count": {
                          "runAfter": {
                            "Set_Enforcement_Status_Processing": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "processingMetrics",
                            "value": {
                              "totalProcessed": "@{variables('processingMetrics').totalProcessed}",
                              "successCount": "@{variables('processingMetrics').successCount}",
                              "errorCount": "@{variables('processingMetrics').errorCount}",
                              "tierOneCount": "@{add(variables('processingMetrics').tierOneCount, 1)}",
                              "tierTwoCount": "@{variables('processingMetrics').tierTwoCount}",
                              "tierThreeCount": "@{variables('processingMetrics').tierThreeCount}",
                              "startTime": "@{variables('processingMetrics').startTime}"
                            }
                          }
                        },
                        "Distribute_to_All_Targets": {
                          "runAfter": {
                            "Increment_Tier_One_Count": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": "@{item()[0]},@{guid()},@{item()[12]},,,@{item()[1]},@{item()[2]},@{item()[11]},AutoDistribute,Success,High confidence + TLP:GREEN/WHITE = Auto-distribute,@{utcNow()}",
                            "headers": {
                              "Log-Type": "CTI_DistributionHistory_CL"
                            },
                            "path": "/api/logs"
                          },
                          "retryPolicy": {
                            "type": "fixed",
                            "count": "@parameters('maxRetryCount')",
                            "interval": "PT10S"
                          }
                        },
                        "For_Each_Target_Platform": {
                          "runAfter": {
                            "Distribute_to_All_Targets": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach",
                          "foreach": "@split(item()[11], ', ')",
                          "actions": {
                            "HTTP_Redirect_to_Target_Connector": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('https://', parameters('prefix'), '-', '@{replace(items(''For_Each_Target_Platform''), '' '', '''')}-Connector-', parameters('environment'), '.azurewebsites.net/api/indicator/distribute')]",
                                "body": {
                                  "indicatorType": "@{item()[1]}",
                                  "indicatorValue": "@{item()[2]}",
                                  "action": "@{item()[5]}",
                                  "title": "@{item()[3]}",
                                  "description": "@{item()[4]}",
                                  "confidenceScore": "@{item()[6]}",
                                  "tlp": "@{item()[9]}",
                                  "threatType": "@{item()[10]}",
                                  "validFrom": "@{item()[7]}",
                                  "validUntil": "@{item()[8]}",
                                  "indicatorId": "@{item()[12]}"
                                }
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        },
                        "Update_Indicator_Status": {
                          "runAfter": {
                            "For_Each_Target_Platform": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "let indicatorId = \"@{item()[12]}\";\nlet now = now();\nCTI_ThreatIntelIndicator_CL\n| where IndicatorId_g == indicatorId\n| extend EnforcementStatus_s = \"Distributed\"\n| extend UpdatedTimeUtc_t = now",
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/api/logs"
                          }
                        },
                        "Increment_Success_Count": {
                          "runAfter": {
                            "Update_Indicator_Status": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "processingMetrics",
                            "value": {
                              "totalProcessed": "@{variables('processingMetrics').totalProcessed}",
                              "successCount": "@{add(variables('processingMetrics').successCount, 1)}",
                              "errorCount": "@{variables('processingMetrics').errorCount}",
                              "tierOneCount": "@{variables('processingMetrics').tierOneCount}",
                              "tierTwoCount": "@{variables('processingMetrics').tierTwoCount}",
                              "tierThreeCount": "@{variables('processingMetrics').tierThreeCount}",
                              "startTime": "@{variables('processingMetrics').startTime}"
                            }
                          }
                        }
                      },
                      "else": {
                        "actions": {
                          "Process_Tier2_Indicators": {
                            "type": "If",
                            "expression": {
                              "and": [
                                {
                                  "greaterOrEquals": [
                                    "@item()[6]",
                                    60
                                  ]
                                },
                                {
                                  "less": [
                                    "@item()[6]",
                                    85
                                  ]
                                }
                              ]
                            },
                            "actions": {
                              "Set_Enforcement_Status_Approval": {
                                "runAfter": {},
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": "let indicatorId = \"@{item()[12]}\";\nlet now = now();\nCTI_ThreatIntelIndicator_CL\n| where IndicatorId_g == indicatorId\n| extend EnforcementStatus_s = \"PendingApproval\"\n| extend UpdatedTimeUtc_t = now",
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/api/logs"
                                }
                              },
                              "Increment_Tier_Two_Count": {
                                "runAfter": {
                                  "Set_Enforcement_Status_Approval": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "processingMetrics",
                                  "value": {
                                    "totalProcessed": "@{variables('processingMetrics').totalProcessed}",
                                    "successCount": "@{variables('processingMetrics').successCount}",
                                    "errorCount": "@{variables('processingMetrics').errorCount}",
                                    "tierOneCount": "@{variables('processingMetrics').tierOneCount}",
                                    "tierTwoCount": "@{add(variables('processingMetrics').tierTwoCount, 1)}",
                                    "tierThreeCount": "@{variables('processingMetrics').tierThreeCount}",
                                    "startTime": "@{variables('processingMetrics').startTime}"
                                  }
                                }
                              },
                              "Create_Approval_Request": {
                                "runAfter": {
                                  "Increment_Tier_Two_Count": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "Http",
                                "inputs": {
                                  "method": "POST",
                                  "uri": "[concat('https://', variables('approvalWorkflowName'), '.azurewebsites.net/api/indicator/approval')]",
                                  "body": {
                                    "indicatorId": "@{item()[12]}",
                                    "indicatorType": "@{item()[1]}",
                                    "indicatorValue": "@{item()[2]}",
                                    "confidenceScore": "@{item()[6]}",
                                    "tlp": "@{item()[9]}",
                                    "threatType": "@{item()[10]}",
                                    "description": "@{item()[4]}",
                                    "distributionTargets": "@{item()[11]}",
                                    "requestTime": "@{utcNow()}"
                                  }
                                },
                                "retryPolicy": {
                                  "type": "fixed",
                                  "count": "@parameters('maxRetryCount')",
                                  "interval": "PT10S"
                                }
                              },
                              "Log_Approval_Request": {
                                "runAfter": {
                                  "Create_Approval_Request": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": "@{utcNow()},@{guid()},@{item()[12]},@{item()[2]},@{item()[1]},ApprovalWorkflow,PendingApproval,Waiting,Medium confidence indicator sent for approval,@{utcNow()}",
                                  "headers": {
                                    "Log-Type": "CTI_DistributionHistory_CL"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/api/logs"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Set_Enforcement_Status_Review": {
                                  "runAfter": {},
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "let indicatorId = \"@{item()[12]}\";\nlet now = now();\nCTI_ThreatIntelIndicator_CL\n| where IndicatorId_g == indicatorId\n| extend EnforcementStatus_s = \"PendingReview\"\n| extend UpdatedTimeUtc_t = now",
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                },
                                "Increment_Tier_Three_Count": {
                                  "runAfter": {
                                    "Set_Enforcement_Status_Review": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "processingMetrics",
                                    "value": {
                                      "totalProcessed": "@{variables('processingMetrics').totalProcessed}",
                                      "successCount": "@{variables('processingMetrics').successCount}",
                                      "errorCount": "@{variables('processingMetrics').errorCount}",
                                      "tierOneCount": "@{variables('processingMetrics').tierOneCount}",
                                      "tierTwoCount": "@{variables('processingMetrics').tierTwoCount}",
                                      "tierThreeCount": "@{add(variables('processingMetrics').tierThreeCount, 1)}",
                                      "startTime": "@{variables('processingMetrics').startTime}"
                                    }
                                  }
                                },
                                "Log_Manual_Review": {
                                  "runAfter": {
                                    "Increment_Tier_Three_Count": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{utcNow()},@{guid()},@{item()[12]},@{item()[2]},@{item()[1]},ManualReview,PendingReview,Waiting,Low confidence indicator queued for manual review,@{utcNow()}",
                                    "headers": {
                                      "Log-Type": "CTI_DistributionHistory_CL"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Set_Processing_Count": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach",
                  "operationOptions": "Sequential"
                },
                "Log_Processing_Metrics": {
                  "runAfter": {
                    "For_Each_Indicator": [
                      "Succeeded",
                      "Failed",
                      "TimedOut"
                    ]
                  },
                  "type": "If",
                  "expression": {
                    "equals": [
                      "@parameters('telemetryEnabled')",
                      true
                    ]
                  },
                  "actions": {
                    "Calculate_Processing_Duration": {
                      "runAfter": {},
                      "type": "Compose",
                      "inputs": "@{ticks(utcNow())-ticks(variables('processingMetrics').startTime)}"
                    },
                    "Send_Processing_Telemetry": {
                      "runAfter": {
                        "Calculate_Processing_Duration": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@{utcNow()},@{guid()},@{workflow().name},ProcessingRun,@{variables('processingMetrics').totalProcessed},@{variables('processingMetrics').successCount},@{variables('processingMetrics').errorCount},@{variables('processingMetrics').tierOneCount},@{variables('processingMetrics').tierTwoCount},@{variables('processingMetrics').tierThreeCount},@{outputs('Calculate_Processing_Duration')}",
                        "headers": {
                          "Log-Type": "CTI_TelemetryData_CL"
                        },
                        "path": "/api/logs"
                      }
                    },
                    "Log_Processing_Errors": {
                      "runAfter": {
                        "Send_Processing_Telemetry": [
                          "Succeeded"
                        ]
                      },
                      "type": "If",
                      "expression": {
                        "greater": [
                          "@length(variables('processingErrors'))",
                          0
                        ]
                      },
                      "actions": {
                        "Send_Error_Telemetry": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": "@{string(variables('processingErrors'))}",
                            "headers": {
                              "Log-Type": "CTI_ProcessingErrors_CL"
                            },
                            "path": "/api/logs"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "Health_Check_Failed": {
              "runAfter": {
                "Check_Environment_Health": [
                  "Failed",
                  "TimedOut"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@{utcNow()},@{guid()},@{workflow().name},HealthCheck,Failed,@{outputs('Check_Environment_Health')}",
                "headers": {
                  "Log-Type": "CTI_SystemHealth_CL"
                },
                "path": "/api/logs"
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[parameters('logAnalyticsConnectionId')]",
                "connectionName": "azureloganalyticsdatacollector",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
              },
              "azuremonitorlogs": {
                "connectionId": "[parameters('logAnalyticsQueryConnectionId')]",
                "connectionName": "azuremonitorlogs",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('office365ConnectionName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "displayName": "Office 365 Outlook",
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/office365')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('approvalWorkflowName')]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('Component', 'Approval Workflow', 'Version', 'V5'))]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceName": {
              "defaultValue": "[parameters('ctiWorkspaceName')]",
              "type": "String"
            },
            "maxRetryCount": {
              "defaultValue": "[parameters('maxRetryCount')]",
              "type": "Int"
            },
            "approvalSla": {
              "defaultValue": "[parameters('sla').approvalTimeMinutes]",
              "type": "Int"
            },
            "criticalApprovalSla": {
              "defaultValue": "[parameters('sla').criticalApprovalTimeMinutes]",
              "type": "Int"
            },
            "emailNotificationAddress": {
              "defaultValue": "[parameters('emailNotificationAddress')]",
              "type": "String"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "indicatorId": {
                      "type": "string"
                    },
                    "indicatorType": {
                      "type": "string"
                    },
                    "indicatorValue": {
                      "type": "string"
                    },
                    "confidenceScore": {
                      "type": "number"
                    },
                    "tlp": {
                      "type": "string"
                    },
                    "threatType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "distributionTargets": {
                      "type": "string"
                    },
                    "requestTime": {
                      "type": "string"
                    },
                    "priority": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "indicatorId",
                    "indicatorType",
                    "indicatorValue"
                  ]
                }
              }
            }
          },
          "actions": {
            "Initialize_Variables": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "indicatorDetails",
                    "type": "object",
                    "value": "@triggerBody()"
                  },
                  {
                    "name": "approvalResult",
                    "type": "string",
                    "value": "Pending"
                  },
                  {
                    "name": "isCritical",
                    "type": "boolean",
                    "value": "@or(equals(triggerBody()?['priority'], 'Critical'), greaterOrEquals(triggerBody()?['confidenceScore'], 75))"
                  },
                  {
                    "name": "alertSummary",
                    "type": "string",
                    "value": "@{concat('Indicator Approval Required: ', coalesce(triggerBody()?['indicatorType'], 'Unknown'), ' - ', triggerBody()?['indicatorValue'])}"
                  },
                  {
                    "name": "slaDeadline",
                    "type": "string",
                    "value": "@{addMinutes(utcNow(), if(variables('isCritical'), parameters('criticalApprovalSla'), parameters('approvalSla')))}"
                  }
                ]
              }
            },
            "Determine_Approval_Flow": {
              "runAfter": {
                "Initialize_Variables": [
                  "Succeeded"
                ]
              },
              "type": "If",
              "expression": {
                "equals": [
                  "@variables('isCritical')",
                  true
                ]
              },
              "actions": {
                "Generate_Critical_Approval_Email": {
                  "runAfter": {},
                  "type": "Compose",
                  "inputs": {
                    "Subject": "CRITICAL: Threat Intelligence Indicator Requires Approval",
                    "Body": "A high-confidence threat indicator requires your immediate review and approval:\n\nType: @{variables('indicatorDetails').indicatorType}\nValue: @{variables('indicatorDetails').indicatorValue}\nThreat Type: @{variables('indicatorDetails').threatType}\nConfidence: @{variables('indicatorDetails').confidenceScore}\nTLP: @{variables('indicatorDetails').tlp}\n\nPlease review and approve/reject within @{parameters('criticalApprovalSla')} minutes. SLA Deadline: @{variables('slaDeadline')}\n\nApproval Link: https://portal.azure.com/#@tenant()/resource@{resourceGroup().id}/workflows/@{workflow().name}"
                  }
                },
                "Send_Critical_Approval_Request": {
                  "runAfter": {
                    "Generate_Critical_Approval_Email": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "To": "@parameters('emailNotificationAddress')",
                      "Subject": "@{outputs('Generate_Critical_Approval_Email').Subject}",
                      "Body": "<p><strong style='color:red'>@{outputs('Generate_Critical_Approval_Email').Body}</strong></p>",
                      "Importance": "High"
                    },
                    "path": "/v2/Mail"
                  }
                },
                "Log_Critical_Approval_Request": {
                  "runAfter": {
                    "Send_Critical_Approval_Request": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "@{utcNow()},@{guid()},@{variables('indicatorDetails').indicatorId},@{variables('indicatorDetails').indicatorValue},@{variables('indicatorDetails').indicatorType},ApprovalWorkflow,CriticalApproval,Waiting,Critical approval requested (SLA: @{parameters('criticalApprovalSla')} min),@{utcNow()}",
                    "headers": {
                      "Log-Type": "CTI_DistributionHistory_CL"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/api/logs"
                  }
                }
              },
              "else": {
                "actions": {
                  "Generate_Standard_Approval_Email": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": {
                      "Subject": "Threat Intelligence Indicator Requires Approval",
                      "Body": "A threat indicator requires your review and approval:\n\nType: @{variables('indicatorDetails').indicatorType}\nValue: @{variables('indicatorDetails').indicatorValue}\nThreat Type: @{variables('indicatorDetails').threatType}\nConfidence: @{variables('indicatorDetails').confidenceScore}\nTLP: @{variables('indicatorDetails').tlp}\n\nPlease review and approve/reject within @{parameters('approvalSla')} minutes. SLA Deadline: @{variables('slaDeadline')}\n\nApproval Link: https://portal.azure.com/#@tenant()/resource@{resourceGroup().id}/workflows/@{workflow().name}"
                    }
                  },
                  "Send_Standard_Approval_Request": {
                    "runAfter": {
                      "Generate_Standard_Approval_Email": [
                        "Succeeded"
                      ]
                    },
                    "type": "ApiConnection",
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['office365']['connectionId']"
                        }
                      },
                      "method": "post",
                      "body": {
                        "To": "@parameters('emailNotificationAddress')",
                        "Subject": "@{outputs('Generate_Standard_Approval_Email').Subject}",
                        "Body": "<p>@{outputs('Generate_Standard_Approval_Email').Body}</p>",
                        "Importance": "Normal"
                      },
                      "path": "/v2/Mail"
                    }
                  },
                  "Log_Standard_Approval_Request": {
                    "runAfter": {
                      "Send_Standard_Approval_Request": [
                        "Succeeded"
                      ]
                    },
                    "type": "ApiConnection",
                    "inputs": {
                      "body": "@{utcNow()},@{guid()},@{variables('indicatorDetails').indicatorId},@{variables('indicatorDetails').indicatorValue},@{variables('indicatorDetails').indicatorType},ApprovalWorkflow,StandardApproval,Waiting,Standard approval requested (SLA: @{parameters('approvalSla')} min),@{utcNow()}",
                      "headers": {
                        "Log-Type": "CTI_DistributionHistory_CL"
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/api/logs"
                    }
                  }
                }
              }
            },
            "Wait_For_Approval_Decision": {
              "runAfter": {
                "Determine_Approval_Flow": [
                  "Succeeded"
                ]
              },
              "type": "Until",
              "expression": {
                "or": [
                  {
                    "not": {
                      "equals": [
                        "@variables('approvalResult')",
                        "Pending"
                      ]
                    }
                  },
                  {
                    "greater": [
                      "@utcNow()",
                      "@variables('slaDeadline')"
                    ]
                  }
                ]
              },
              "limit": {
                "count": 60,
                "timeout": "PT2H"
              },
              "actions": {
                "Delay_Before_Check": {
                  "runAfter": {},
                  "type": "Wait",
                  "inputs": {
                    "interval": {
                      "count": 1,
                      "unit": "Minute"
                    }
                  }
                },
                "Check_Approval_Status": {
                  "runAfter": {
                    "Delay_Before_Check": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "CTI_DistributionHistory_CL \n| where IndicatorId_g == \"@{variables('indicatorDetails').indicatorId}\"\n| where Status_s in (\"Approved\", \"Rejected\")\n| where TimeGenerated > ago(1h)\n| order by TimeGenerated desc\n| limit 1",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/queryData",
                    "queries": {
                      "resourcegroups": "[resourceGroup().name]",
                      "resourcename": "@{parameters('workspaceName')}",
                      "resourcetype": "Log Analytics Workspace",
                      "subscriptions": "[subscription().subscriptionId]",
                      "timerange": "Last hour"
                    }
                  }
                },
                "Process_Decision": {
                  "runAfter": {
                    "Check_Approval_Status": [
                      "Succeeded"
                    ]
                  },
                  "type": "If",
                  "expression": {
                    "greater": [
                      "@length(body('Check_Approval_Status').tables[0].rows)",
                      0
                    ]
                  },
                  "actions": {
                    "Set_Decision_Result": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "approvalResult",
                        "value": "@body('Check_Approval_Status').tables[0].rows[0][7]"
                      }
                    }
                  }
                },
                "Check_SLA_Deadline": {
                  "runAfter": {
                    "Process_Decision": [
                      "Succeeded"
                    ]
                  },
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('approvalResult')",
                          "Pending"
                        ]
                      },
                      {
                        "greater": [
                          "@utcNow()",
                          "@variables('slaDeadline')"
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Set_Auto_Approval": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "approvalResult",
                        "value": "Approved"
                      }
                    },
                    "Log_SLA_Auto_Approval": {
                      "runAfter": {
                        "Set_Auto_Approval": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@{utcNow()},@{guid()},@{variables('indicatorDetails').indicatorId},@{variables('indicatorDetails').indicatorValue},@{variables('indicatorDetails').indicatorType},ApprovalWorkflow,Approved,Success,Auto-approved due to exceeded SLA,@{utcNow()}",
                        "headers": {
                          "Log-Type": "CTI_DistributionHistory_CL"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/logs"
                      }
                    },
                    "Send_SLA_Auto_Approval_Notification": {
                      "runAfter": {
                        "Log_SLA_Auto_Approval": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "To": "@parameters('emailNotificationAddress')",
                          "Subject": "SLA Exceeded: Indicator Auto-Approved",
                          "Body": "<p>The following indicator has been automatically approved due to SLA timeout:</p><p>Type: @{variables('indicatorDetails').indicatorType}<br>Value: @{variables('indicatorDetails').indicatorValue}<br>Confidence: @{variables('indicatorDetails').confidenceScore}</p>",
                          "Importance": "Normal"
                        },
                        "path": "/v2/Mail"
                      }
                    }
                  }
                }
              }
            },
            "Process_Final_Decision": {
              "runAfter": {
                "Wait_For_Approval_Decision": [
                  "Succeeded"
                ]
              },
              "type": "Switch",
              "expression": "@variables('approvalResult')",
              "cases": {
                "Approved": {
                  "actions": {
                    "Update_Indicator_Status_Approved": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "let indicatorId = \"@{variables('indicatorDetails').indicatorId}\";\nlet now = now();\nCTI_ThreatIntelIndicator_CL\n| where IndicatorId_g == indicatorId\n| extend EnforcementStatus_s = \"ApprovedForDistribution\"\n| extend UpdatedTimeUtc_t = now",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/logs"
                      }
                    },
                    "Submit_For_Distribution": {
                      "runAfter": {
                        "Update_Indicator_Status_Approved": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "method": "POST",
                        "uri": "[concat('https://', variables('inoculationEngineName'), '.azurewebsites.net/api/indicator/distribute')]",
                        "body": {
                          "indicatorId": "@variables('indicatorDetails').indicatorId",
                          "indicatorType": "@variables('indicatorDetails').indicatorType",
                          "indicatorValue": "@variables('indicatorDetails').indicatorValue",
                          "distributionTargets": "@variables('indicatorDetails').distributionTargets",
                          "confidence": "@variables('indicatorDetails').confidenceScore",
                          "tlp": "@variables('indicatorDetails').tlp"
                        }
                      },
                      "retryPolicy": {
                        "type": "fixed",
                        "count": "@parameters('maxRetryCount')",
                        "interval": "PT10S"
                      }
                    },
                    "Send_Approval_Success_Notification": {
                      "runAfter": {
                        "Submit_For_Distribution": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "To": "@parameters('emailNotificationAddress')",
                          "Subject": "Indicator Approved and Distributed",
                          "Body": "<p>The following indicator has been approved and distributed successfully:</p><p>Type: @{variables('indicatorDetails').indicatorType}<br>Value: @{variables('indicatorDetails').indicatorValue}<br>Confidence: @{variables('indicatorDetails').confidenceScore}</p>",
                          "Importance": "Normal"
                        },
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "Rejected": {
                  "actions": {
                    "Update_Indicator_Status_Rejected": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "let indicatorId = \"@{variables('indicatorDetails').indicatorId}\";\nlet now = now();\nCTI_ThreatIntelIndicator_CL\n| where IndicatorId_g == indicatorId\n| extend EnforcementStatus_s = \"Rejected\"\n| extend UpdatedTimeUtc_t = now",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/logs"
                      }
                    },
                    "Send_Rejection_Notification": {
                      "runAfter": {
                        "Update_Indicator_Status_Rejected": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "To": "@parameters('emailNotificationAddress')",
                          "Subject": "Indicator Rejected",
                          "Body": "<p>The following indicator has been rejected:</p><p>Type: @{variables('indicatorDetails').indicatorType}<br>Value: @{variables('indicatorDetails').indicatorValue}<br>Confidence: @{variables('indicatorDetails').confidenceScore}</p>",
                          "Importance": "Normal"
                        },
                        "path": "/v2/Mail"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Log_Unknown_Status": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                      "body": "@{utcNow()},@{guid()},@{variables('indicatorDetails').indicatorId},@{variables('indicatorDetails').indicatorValue},@{variables('indicatorDetails').indicatorType},ApprovalWorkflow,Unknown,Error,Unknown approval status (@{variables('approvalResult')}),@{utcNow()}",
                      "headers": {
                        "Log-Type": "CTI_ProcessingErrors_CL"
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/api/logs"
                    }
                  }
                }
              }
            },
            "Response": {
              "runAfter": {
                "Process_Final_Decision": [
                  "Succeeded"
                ]
              },
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "status": "success",
                  "indicatorId": "@variables('indicatorDetails').indicatorId",
                  "result": "@variables('approvalResult')"
                }
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[parameters('logAnalyticsConnectionId')]",
                "connectionName": "azureloganalyticsdatacollector",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
              },
              "azuremonitorlogs": {
                "connectionId": "[parameters('logAnalyticsQueryConnectionId')]",
                "connectionName": "azuremonitorlogs",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
              },
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                "connectionName": "office365",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/office365')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Portal/dashboards",
      "apiVersion": "2020-09-01-preview",
      "name": "[variables('dashboardName')]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('hidden-title', 'CTI Inoculation Engine Operational Dashboard', 'Component', 'Monitoring', 'Version', 'V5'))]",
      "properties": {
        "lenses": {
          "0": {
            "order": 0,
            "parts": {
              "0": {
                "position": {
                  "x": 0,
                  "y": 0,
                  "colSpan": 18,
                  "rowSpan": 1
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "# Central Threat Intelligence v5.0 - Operational Dashboard\nThis dashboard provides real-time monitoring of the threat intelligence processing pipeline, distribution status, and system health.",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1
                      }
                    }
                  }
                }
              },
              "1": {
                "position": {
                  "x": 0,
                  "y": 1,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "CTI_TelemetryData_CL | where TimeGenerated > ago(24h) | summarize TotalProcessed=sum(Column1), SuccessCount=sum(Column2), ErrorCount=sum(Column3) by bin(TimeGenerated, 1h) | render timechart"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Dimensions",
                      "isOptional": true,
                      "value": {
                        "xAxis": {
                          "name": "TimeGenerated",
                          "type": "datetime"
                        },
                        "yAxis": [
                          {
                            "name": "TotalProcessed",
                            "type": "real"
                          },
                          {
                            "name": "SuccessCount",
                            "type": "real"
                          },
                          {
                            "name": "ErrorCount",
                            "type": "real"
                          }
                        ],
                        "splitBy": [],
                        "aggregation": "Sum"
                      }
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Indicator Processing Status"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Indicator Processing Metrics"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "2": {
                "position": {
                  "x": 6,
                  "y": 1,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "CTI_TelemetryData_CL | where TimeGenerated > ago(24h) | summarize SuccessRate = (sum(Column2) * 100.0 / sum(Column1)) by bin(TimeGenerated, 1h) | render timechart"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Success Rate Trend"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Distribution Success Rate (%)"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "3": {
                "position": {
                  "x": 12,
                  "y": 1,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "CTI_ProcessingErrors_CL | where TimeGenerated > ago(24h) | summarize Count=count() by ErrorType_s | top 5 by Count desc | render piechart"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Top Error Types"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Top Error Types (Last 24h)"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "4": {
                "position": {
                  "x": 0,
                  "y": 5,
                  "colSpan": 18,
                  "rowSpan": 1
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "## System Health",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1
                      }
                    }
                  }
                }
              },
              "5": {
                "position": {
                  "x": 0,
                  "y": 6,
                  "colSpan": 8,
                  "rowSpan": 3
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "// System health status\r\n// Logic App run status\r\nlet logicApps = dynamic([\"CTI-TAXII2-Connector\", \"CTI-DefenderXDR-Connector\", \"CTI-MDTI-Connector\", \"CTI-EntraID-Connector\", \"CTI-ExchangeOnline-Connector\", \"CTI-SecurityCopilot-Connector\", \"CTI-Housekeeping\", \"CTI-ThreatFeedSync\"]);\r\n\r\n// Get Logic App runs status\r\nlet workflowRuns = union \r\n    // Get recent workflow runs\r\n    (workspace(\"*\").WorkflowRuntime\r\n    | where TimeGenerated > ago(24h)\r\n    | where ResourceId contains \"Microsoft.Logic/workflows\" and Status in (\"Failed\", \"Succeeded\")\r\n    | extend ResourceName = tostring(split(ResourceId, \"/\")[8])\r\n    | extend isLogicApp = indexof(logicApps, ResourceName) != -1\r\n    | where isLogicApp\r\n    | project TimeGenerated, ResourceName, Status, startTime_t);\r\n\r\n// Process workflow status\r\nworkflowRuns\r\n| summarize LastRunStatus = arg_max(TimeGenerated, Status) by ResourceName\r\n| extend Status = iff(LastRunStatus == \"Failed\", \"Failed\", \"Healthy\")\r\n| project Component = ResourceName, Status\r\n| union (\r\n    // Add a row for workspace status - always healthy if query runs\r\n    datatable(Component:string, Status:string)[ \"Log Analytics Workspace\", \"Healthy\"]\r\n)\r\n| order by Component asc"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "System Component Health"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "System Component Health"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "6": {
                "position": {
                  "x": 8,
                  "y": 6,
                  "colSpan": 10,
                  "rowSpan": 3
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "// Logic App run history\r\nlet logicApps = dynamic([\"CTI-TAXII2-Connector\", \"CTI-DefenderXDR-Connector\", \"CTI-MDTI-Connector\", \"CTI-EntraID-Connector\", \"CTI-ExchangeOnline-Connector\", \"CTI-SecurityCopilot-Connector\", \"CTI-Housekeeping\", \"CTI-ThreatFeedSync\"]);\r\n\r\n// Get Logic App runs\r\nworkspace(\"*\").WorkflowRuntime\r\n| where TimeGenerated > ago(24h)\r\n| where ResourceId contains \"Microsoft.Logic/workflows\"\r\n| extend ResourceName = tostring(split(ResourceId, \"/\")[8])\r\n| extend isLogicApp = indexof(logicApps, ResourceName) != -1\r\n| where isLogicApp\r\n| project TimeGenerated, Connector = ResourceName, Status, RunId = WorkflowRunId\r\n| order by TimeGenerated desc\r\n| take 10"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Recent Connector Runs"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Recent Connector Runs"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "7": {
                "position": {
                  "x": 0,
                  "y": 9,
                  "colSpan": 18,
                  "rowSpan": 1
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "## Distribution Status",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1
                      }
                    }
                  }
                }
              },
              "8": {
                "position": {
                  "x": 0,
                  "y": 10,
                  "colSpan": 9,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "// Distribution of indicators by target product\r\nunion \r\n(CTI_IPIndicators_CL\r\n| where Active_b == true\r\n| extend Type = \"IP\", Value = IPAddress_s, Distribution = split(DistributionTargets_s, \", \")),\r\n(CTI_DomainIndicators_CL\r\n| where Active_b == true\r\n| extend Type = \"Domain\", Value = Domain_s, Distribution = split(DistributionTargets_s, \", \")),\r\n(CTI_URLIndicators_CL\r\n| where Active_b == true\r\n| extend Type = \"URL\", Value = URL_s, Distribution = split(DistributionTargets_s, \", \")),\r\n(CTI_FileHashIndicators_CL\r\n| where Active_b == true\r\n| extend Type = \"File Hash\", Value = coalesce(SHA256_s, SHA1_s, MD5_s), Distribution = split(DistributionTargets_s, \", \"))\r\n| mv-expand Target = Distribution\r\n| summarize Count = count() by tostring(Target), Type\r\n| where isnotempty(Target)\r\n| order by Count desc"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Distribution by Target"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Distribution by Target Platform"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "9": {
                "position": {
                  "x": 9,
                  "y": 10,
                  "colSpan": 9,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "// Distribution history\r\nCTI_DistributionHistory_CL\r\n| where TimeGenerated > ago(24h)\r\n| summarize SuccessCount = countif(Status_s == \"Success\"), ErrorCount = countif(Status_s == \"Error\"), WaitingCount = countif(Status_s == \"Waiting\") by TargetSystem_s\r\n| extend TotalAttempts = SuccessCount + ErrorCount + WaitingCount\r\n| project TargetSystem_s, SuccessCount, ErrorCount, WaitingCount, TotalAttempts, SuccessRate = iff(TotalAttempts > 0, 100.0 * SuccessCount / TotalAttempts, 0.0)\r\n| order by TotalAttempts desc"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P1D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Distribution History"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Distribution Success Rate by Target (24h)"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "10": {
                "position": {
                  "x": 0,
                  "y": 14,
                  "colSpan": 18,
                  "rowSpan": 1
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "## Approval Workflow Status",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1
                      }
                    }
                  }
                }
              },
              "11": {
                "position": {
                  "x": 0,
                  "y": 15,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "// Approval workflow stats\r\nCTI_DistributionHistory_CL\r\n| where TimeGenerated > ago(7d) and DistributionType_s has \"Approval\"\r\n| extend ApprovalType = iff(DistributionType_s has \"Critical\", \"Critical\", \"Standard\")\r\n| summarize count() by Status_s, ApprovalType\r\n| extend Status = case(\r\n    Status_s == \"Waiting\", \"Pending\",\r\n    Status_s == \"Success\" and ApprovalType == \"Critical\", \"Approved (Critical)\",\r\n    Status_s == \"Success\" and ApprovalType == \"Standard\", \"Approved (Standard)\",\r\n    Status_s == \"Error\", \"Error\",\r\n    \"Other\"\r\n)\r\n| project Status, Count=count_\r\n| order by Count desc"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P7D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Approval Stats"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Approval Workflow Status (7d)"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              },
              "12": {
                "position": {
                  "x": 6,
                  "y": 15,
                  "colSpan": 12,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "resourceTypeMode",
                      "isOptional": true,
                      "value": "workspace"
                    },
                    {
                      "name": "ComponentId",
                      "isOptional": true,
                      "value": {
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "Name": "[parameters('ctiWorkspaceName')]",
                        "ResourceId": "[parameters('ctiWorkspaceId')]"
                      }
                    },
                    {
                      "name": "Query",
                      "isOptional": true,
                      "value": "// Pending approvals\r\nCTI_DistributionHistory_CL\r\n| where TimeGenerated > ago(7d)\r\n| where DistributionType_s has \"Approval\" and Status_s == \"Waiting\"\r\n| extend ApprovalType = iff(DistributionType_s has \"Critical\", \"Critical\", \"Standard\")\r\n| project TimeGenerated, IndicatorId_g, IndicatorValue_s, IndicatorType_s, ApprovalType, Details_s\r\n| order by TimeGenerated asc"
                    },
                    {
                      "name": "TimeRange",
                      "isOptional": true,
                      "value": "P7D"
                    },
                    {
                      "name": "Version",
                      "isOptional": true,
                      "value": "1.0"
                    },
                    {
                      "name": "PartId",
                      "isOptional": true,
                      "value": "Pending Approvals"
                    },
                    {
                      "name": "PartTitle",
                      "isOptional": true,
                      "value": "Pending Approval Requests"
                    }
                  ],
                  "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                  "settings": {}
                }
              }
            }
          }
        },
        "metadata": {
          "model": {
            "timeRange": {
              "value": {
                "relative": {
                  "duration": 24,
                  "timeUnit": 1
                }
              },
              "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[concat(variables('inoculationEngineName'), '-diagnostics')]",
      "scope": "[resourceId('Microsoft.Logic/workflows', variables('inoculationEngineName'))]",
      "properties": {
        "workspaceId": "[parameters('ctiWorkspaceId')]",
        "logs": [
          {
            "category": "WorkflowRuntime",
            "enabled": true,
            "retentionPolicy": {
              "days": 30,
              "enabled": true
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": 30,
              "enabled": true
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('inoculationEngineName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[concat(variables('approvalWorkflowName'), '-diagnostics')]",
      "scope": "[resourceId('Microsoft.Logic/workflows', variables('approvalWorkflowName'))]",
      "properties": {
        "workspaceId": "[parameters('ctiWorkspaceId')]",
        "logs": [
          {
            "category": "WorkflowRuntime",
            "enabled": true,
            "retentionPolicy": {
              "days": 30,
              "enabled": true
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": 30,
              "enabled": true
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('approvalWorkflowName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[concat(parameters('prefix'), '-SecurityCopilot-Deployment-', parameters('environment'))]",
      "condition": "[parameters('enableSecurityCopilot')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Insights/dataCollectionEndpoints",
              "apiVersion": "2021-09-01-preview",
              "name": "[parameters('dceNameForCopilot')]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('Component', 'Security Copilot Integration', 'Version', 'V5'))]",
              "properties": {
                "description": "Data Collection Endpoint for Security Copilot integration",
                "networkAcls": {
                  "publicNetworkAccess": "Enabled"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[concat(parameters('prefix'), '-SecurityCopilot-Connector-', parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('Component', 'Security Copilot Connector', 'Version', 'V5'))]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[parameters('managedIdentityId')]": {}
                }
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "defaultValue": {},
                      "type": "Object"
                    },
                    "maxRetryCount": {
                      "defaultValue": "[parameters('maxRetryCount')]",
                      "type": "Int"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "indicatorType": {
                              "type": "string"
                            },
                            "indicatorValue": {
                              "type": "string"
                            },
                            "action": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "confidenceScore": {
                              "type": "number"
                            },
                            "tlp": {
                              "type": "string"
                            },
                            "threatType": {
                              "type": "string"
                            },
                            "validFrom": {
                              "type": "string"
                            },
                            "validUntil": {
                              "type": "string"
                            },
                            "indicatorId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "indicatorType",
                            "indicatorValue",
                            "indicatorId"
                          ]
                        }
                      }
                    }
                  },
                  "actions": {
                    "Initialize_Variables": {
                      "runAfter": {},
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dceEndpoint",
                            "type": "string",
                            "value": "[concat('https://', parameters('dceNameForCopilot'), '.', parameters('location'), '.monitor.azure.com')]"
                          },
                          {
                            "name": "indicatorPayload",
                            "type": "object",
                            "value": {
                              "indicatorType": "@triggerBody()?['indicatorType']",
                              "indicatorValue": "@triggerBody()?['indicatorValue']",
                              "action": "@coalesce(triggerBody()?['action'], 'block')",
                              "confidenceScore": "@coalesce(triggerBody()?['confidenceScore'], 70)",
                              "tlp": "@coalesce(triggerBody()?['tlp'], 'TLP:AMBER')",
                              "threatType": "@coalesce(triggerBody()?['threatType'], 'malicious-activity')",
                              "source": "CTI Inoculation Engine",
                              "description": "@coalesce(triggerBody()?['description'], 'Distributed by CTI Inoculation Engine')"
                            }
                          }
                        ]
                      }
                    },
                    "Process_Indicator_Type": {
                      "runAfter": {
                        "Initialize_Variables": [
                          "Succeeded"
                        ]
                      },
                      "type": "Switch",
                      "expression": "@toLower(triggerBody()?['indicatorType'])",
                      "cases": {
                        "domainname": {
                          "actions": {
                            "Send_Domain_Indicator": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('@{variables(''dceEndpoint'')}/dataCollectionRules/dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'), '/streams/Custom-CTI_DomainIndicators_CL')]",
                                "headers": {
                                  "Content-Type": "application/json",
                                  "Authorization": "Bearer @{activity('Get_Management_Token').output.access_token}"
                                },
                                "body": [
                                  {
                                    "Source": "@{variables('indicatorPayload').source}",
                                    "Domain": "@{variables('indicatorPayload').indicatorValue}",
                                    "ThreatType": "@{variables('indicatorPayload').threatType}",
                                    "Confidence": "@{variables('indicatorPayload').confidenceScore}",
                                    "TLP": "@{variables('indicatorPayload').tlp}",
                                    "Action": "@{variables('indicatorPayload').action}",
                                    "Description": "@{variables('indicatorPayload').description}",
                                    "IndicatorId": "@{triggerBody()?['indicatorId']}"
                                  }
                                ]
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        },
                        "ipv4": {
                          "actions": {
                            "Send_IP_Indicator": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('@{variables(''dceEndpoint'')}/dataCollectionRules/dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'), '/streams/Custom-CTI_IPIndicators_CL')]",
                                "headers": {
                                  "Content-Type": "application/json",
                                  "Authorization": "Bearer @{activity('Get_Management_Token').output.access_token}"
                                },
                                "body": [
                                  {
                                    "Source": "@{variables('indicatorPayload').source}",
                                    "IPAddress": "@{variables('indicatorPayload').indicatorValue}",
                                    "ThreatType": "@{variables('indicatorPayload').threatType}",
                                    "Confidence": "@{variables('indicatorPayload').confidenceScore}",
                                    "TLP": "@{variables('indicatorPayload').tlp}",
                                    "Action": "@{variables('indicatorPayload').action}",
                                    "Description": "@{variables('indicatorPayload').description}",
                                    "IndicatorId": "@{triggerBody()?['indicatorId']}"
                                  }
                                ]
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        },
                        "url": {
                          "actions": {
                            "Send_URL_Indicator": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('@{variables(''dceEndpoint'')}/dataCollectionRules/dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'), '/streams/Custom-CTI_URLIndicators_CL')]",
                                "headers": {
                                  "Content-Type": "application/json",
                                  "Authorization": "Bearer @{activity('Get_Management_Token').output.access_token}"
                                },
                                "body": [
                                  {
                                    "Source": "@{variables('indicatorPayload').source}",
                                    "URL": "@{variables('indicatorPayload').indicatorValue}",
                                    "ThreatType": "@{variables('indicatorPayload').threatType}",
                                    "Confidence": "@{variables('indicatorPayload').confidenceScore}",
                                    "TLP": "@{variables('indicatorPayload').tlp}",
                                    "Action": "@{variables('indicatorPayload').action}",
                                    "Description": "@{variables('indicatorPayload').description}",
                                    "IndicatorId": "@{triggerBody()?['indicatorId']}"
                                  }
                                ]
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        },
                        "filehash-md5": {
                          "actions": {
                            "Send_File_Hash_Indicator_MD5": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('@{variables(''dceEndpoint'')}/dataCollectionRules/dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'), '/streams/Custom-CTI_FileHashIndicators_CL')]",
                                "headers": {
                                  "Content-Type": "application/json",
                                  "Authorization": "Bearer @{activity('Get_Management_Token').output.access_token}"
                                },
                                "body": [
                                  {
                                    "Source": "@{variables('indicatorPayload').source}",
                                    "MD5": "@{variables('indicatorPayload').indicatorValue}",
                                    "ThreatType": "@{variables('indicatorPayload').threatType}",
                                    "Confidence": "@{variables('indicatorPayload').confidenceScore}",
                                    "TLP": "@{variables('indicatorPayload').tlp}",
                                    "Action": "@{variables('indicatorPayload').action}",
                                    "Description": "@{variables('indicatorPayload').description}",
                                    "IndicatorId": "@{triggerBody()?['indicatorId']}"
                                  }
                                ]
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        },
                        "filehash-sha1": {
                          "actions": {
                            "Send_File_Hash_Indicator_SHA1": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('@{variables(''dceEndpoint'')}/dataCollectionRules/dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'), '/streams/Custom-CTI_FileHashIndicators_CL')]",
                                "headers": {
                                  "Content-Type": "application/json",
                                  "Authorization": "Bearer @{activity('Get_Management_Token').output.access_token}"
                                },
                                "body": [
                                  {
                                    "Source": "@{variables('indicatorPayload').source}",
                                    "SHA1": "@{variables('indicatorPayload').indicatorValue}",
                                    "ThreatType": "@{variables('indicatorPayload').threatType}",
                                    "Confidence": "@{variables('indicatorPayload').confidenceScore}",
                                    "TLP": "@{variables('indicatorPayload').tlp}",
                                    "Action": "@{variables('indicatorPayload').action}",
                                    "Description": "@{variables('indicatorPayload').description}",
                                    "IndicatorId": "@{triggerBody()?['indicatorId']}"
                                  }
                                ]
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        },
                        "filehash-sha256": {
                          "actions": {
                            "Send_File_Hash_Indicator_SHA256": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "[concat('@{variables(''dceEndpoint'')}/dataCollectionRules/dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'), '/streams/Custom-CTI_FileHashIndicators_CL')]",
                                "headers": {
                                  "Content-Type": "application/json",
                                  "Authorization": "Bearer @{activity('Get_Management_Token').output.access_token}"
                                },
                                "body": [
                                  {
                                    "Source": "@{variables('indicatorPayload').source}",
                                    "SHA256": "@{variables('indicatorPayload').indicatorValue}",
                                    "ThreatType": "@{variables('indicatorPayload').threatType}",
                                    "Confidence": "@{variables('indicatorPayload').confidenceScore}",
                                    "TLP": "@{variables('indicatorPayload').tlp}",
                                    "Action": "@{variables('indicatorPayload').action}",
                                    "Description": "@{variables('indicatorPayload').description}",
                                    "IndicatorId": "@{triggerBody()?['indicatorId']}"
                                  }
                                ]
                              },
                              "retryPolicy": {
                                "type": "fixed",
                                "count": "@parameters('maxRetryCount')",
                                "interval": "PT10S"
                              }
                            }
                          }
                        }
                      },
                      "default": {
                        "actions": {
                          "Log_Unsupported_Indicator_Type": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": "@{utcNow()},@{guid()},SecurityCopilotConnector,IndicatorTypeError,@{triggerBody()?['indicatorType']},Unsupported indicator type for Security Copilot,@{utcNow()}",
                              "headers": {
                                "Log-Type": "CTI_ProcessingErrors_CL"
                              },
                              "path": "/api/logs"
                            }
                          }
                        }
                      }
                    },
                    "Response": {
                      "runAfter": {
                        "Process_Indicator_Type": [
                          "Succeeded"
                        ]
                      },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "statusCode": 200,
                        "body": {
                          "status": "success",
                          "message": "Indicator processed for Security Copilot",
                          "indicatorId": "@{triggerBody()?['indicatorId']}"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureloganalyticsdatacollector": {
                        "connectionId": "[parameters('logAnalyticsConnectionId')]",
                        "connectionName": "azureloganalyticsdatacollector",
                        "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2021-09-01-preview",
              "name": "[concat('dcr-', parameters('prefix'), '-SecurityCopilot-', parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "description": "Data Collection Rule for Security Copilot integration",
                "dataSources": {},
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[parameters('ctiWorkspaceId')]",
                      "name": "SecurityCopilotWorkspace"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-CTI_DomainIndicators_CL",
                      "Custom-CTI_IPIndicators_CL",
                      "Custom-CTI_URLIndicators_CL",
                      "Custom-CTI_FileHashIndicators_CL"
                    ],
                    "destinations": [
                      "SecurityCopilotWorkspace"
                    ]
                  }
                ],
                "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceNameForCopilot'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceNameForCopilot'))]"
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "inoculationEngineId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Logic/workflows', variables('inoculationEngineName'))]"
    },
    "inoculationEngineName": {
      "type": "string",
      "value": "[variables('inoculationEngineName')]"
    },
    "dashboardId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Portal/dashboards', variables('dashboardName'))]"
    },
    "approvalWorkflowId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Logic/workflows', variables('approvalWorkflowName'))]"
    }
  }
}
