{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for resource names"
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Environment (prod, dev, test)"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "managedIdentityId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the managed identity"
      }
    },
    "logAnalyticsConnectionId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the Log Analytics Data Collector connection"
      }
    },
    "logAnalyticsQueryConnectionId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the Log Analytics Query connection"
      }
    },
    "ctiWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Log Analytics workspace"
      }
    },
    "ctiWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the Log Analytics workspace"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to resources"
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable system telemetry"
      }
    },
    "enableAutoScaling": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable auto-scaling for Logic Apps"
      }
    },
    "maxRetryCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Maximum retry count for operations"
      }
    },
    "sla": {
      "type": "object",
      "metadata": {
        "description": "SLA configuration"
      }
    },
    "clientSecretName": {
      "type": "string",
      "metadata": {
        "description": "Name of the client secret in Key Vault"
      }
    },
    "diagnosticSettingsRetentionDays": {
      "type": "int",
      "metadata": {
        "description": "Retention period for diagnostic settings"
      }
    },
    "enableMDTI": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Microsoft Defender Threat Intelligence integration"
      }
    },
    "enableSecurityCopilot": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Microsoft Security Copilot integration"
      }
    },
    "dceNameForCopilot": {
      "type": "string",
      "metadata": {
        "description": "Data Collection Endpoint name for Security Copilot"
      }
    },
    "securityApiBaseUrl": {
      "type": "string",
      "defaultValue": "https://api.securitycenter.microsoft.com",
      "metadata": {
        "description": "Security API base URL"
      }
    }
  },
  "variables": {
    "inoculationEngineName": "[concat(parameters('prefix'), '-inoculation-', parameters('environment'))]",
    "triageEngineName": "[concat(parameters('prefix'), '-triage-', parameters('environment'))]",
    "approvalWorkflowName": "[concat(parameters('prefix'), '-approval-', parameters('environment'))]",
    "enrichmentEngineName": "[concat(parameters('prefix'), '-enrichment-', parameters('environment'))]",
    "dashboardName": "[concat(parameters('prefix'), '-cti-dashboard-', parameters('environment'))]",
    "keyvaultConnectionName": "[concat('keyvault-connection-', parameters('environment'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('keyvaultConnectionName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "displayName": "Key Vault Connection",
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]"
        },
        "parameterValues": {
          "vaultName": "[parameters('keyVaultName')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('inoculationEngineName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceName": {
              "defaultValue": "[parameters('ctiWorkspaceName')]",
              "type": "String"
            },
            "maxRetryCount": {
              "defaultValue": "[parameters('maxRetryCount')]",
              "type": "Int"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 1
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Get_High_Confidence_Indicators": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "CTI_ThreatIntelIndicator_CL \n| where Confidence_d >= 80 and Active_b == true\n| where TimeGenerated > ago(1h)\n| project Type_s, Value_s, Confidence_d, ThreatType_s, Description_s, Action_s, IndicatorId_g, ValidUntil_t\n| limit 500",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/queryData",
                "queries": {
                  "resourcegroups": "[resourceGroup().name]",
                  "resourcename": "@{parameters('workspaceName')}",
                  "resourcetype": "Log Analytics Workspace",
                  "subscriptions": "[subscription().subscriptionId]",
                  "timerange": "Last hour"
                }
              },
              "retryPolicy": {
                "type": "fixed",
                "count": "@parameters('maxRetryCount')",
                "interval": "PT10S"
              }
            },
            "For_Each_Indicator": {
              "foreach": "@body('Get_High_Confidence_Indicators').tables[0].rows",
              "actions": {
                "Distribute_Indicator": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "@{utcNow()},@{guid()},@{item()[6]},@{item()[1]},@{item()[0]},Auto-Distribution,Success,Indicator processed by inoculation engine,@{utcNow()}",
                    "headers": {
                      "Log-Type": "CTI_DistributionHistory_CL"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/api/logs"
                  }
                }
              },
              "runAfter": {
                "Get_High_Confidence_Indicators": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 10
                }
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[parameters('logAnalyticsConnectionId')]",
                "connectionName": "azureloganalyticsdatacollector",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
              },
              "azuremonitorlogs": {
                "connectionId": "[parameters('logAnalyticsQueryConnectionId')]",
                "connectionName": "azuremonitorlogs",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
              },
              "keyvault": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('keyvaultConnectionName'))]",
                "connectionName": "keyvault",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('keyvaultConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('triageEngineName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceName": {
              "defaultValue": "[parameters('ctiWorkspaceName')]",
              "type": "String"
            },
            "maxRetryCount": {
              "defaultValue": "[parameters('maxRetryCount')]",
              "type": "Int"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 2
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Get_Medium_Confidence_Indicators": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "CTI_ThreatIntelIndicator_CL \n| where Confidence_d between (50 .. 79) and Active_b == true\n| where TimeGenerated > ago(2h)\n| project Type_s, Value_s, Confidence_d, ThreatType_s, Description_s, Action_s, IndicatorId_g, ValidUntil_t\n| limit 100",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/queryData",
                "queries": {
                  "resourcegroups": "[resourceGroup().name]",
                  "resourcename": "@{parameters('workspaceName')}",
                  "resourcetype": "Log Analytics Workspace",
                  "subscriptions": "[subscription().subscriptionId]",
                  "timerange": "Last 2 hours"
                }
              },
              "retryPolicy": {
                "type": "fixed",
                "count": "@parameters('maxRetryCount')",
                "interval": "PT10S"
              }
            },
            "For_Each_Medium_Confidence_Indicator": {
              "foreach": "@body('Get_Medium_Confidence_Indicators').tables[0].rows",
              "actions": {
                "Enqueue_For_Approval": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "@{utcNow()},@{guid()},@{item()[6]},@{item()[1]},@{item()[0]},Approval,Waiting,Waiting for approval,@{utcNow()}",
                    "headers": {
                      "Log-Type": "CTI_DistributionHistory_CL"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/api/logs"
                  }
                }
              },
              "runAfter": {
                "Get_Medium_Confidence_Indicators": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[parameters('logAnalyticsConnectionId')]",
                "connectionName": "azureloganalyticsdatacollector",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
              },
              "azuremonitorlogs": {
                "connectionId": "[parameters('logAnalyticsQueryConnectionId')]",
                "connectionName": "azuremonitorlogs",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('approvalWorkflowName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceName": {
              "defaultValue": "[parameters('ctiWorkspaceName')]",
              "type": "String"
            },
            "approvalTimeMinutes": {
              "defaultValue": "[parameters('sla').approvalTimeMinutes]",
              "type": "Int"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 4
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Get_Pending_Approvals": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "CTI_DistributionHistory_CL \n| where DistributionType_s has \"Approval\" and Status_s == \"Waiting\"\n| extend ApprovalType = iff(DistributionType_s has \"Critical\", \"Critical\", \"Standard\")\n| project OperationId_g, IndicatorId_g, IndicatorValue_s, IndicatorType_s, ApprovalType, Status_s, Timestamp_t",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/queryData",
                "queries": {
                  "resourcegroups": "[resourceGroup().name]",
                  "resourcename": "@{parameters('workspaceName')}",
                  "resourcetype": "Log Analytics Workspace",
                  "subscriptions": "[subscription().subscriptionId]",
                  "timerange": "Last 7 days"
                }
              }
            },
            "Process_Approvals": {
              "runAfter": {
                "Get_Pending_Approvals": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "// Approval system status record\n@{utcNow()},Approval system processed @{length(body('Get_Pending_Approvals').tables[0].rows)} pending approvals",
                "headers": {
                  "Log-Type": "CTI_TelemetryData_CL"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/api/logs"
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[parameters('logAnalyticsConnectionId')]",
                "connectionName": "azureloganalyticsdatacollector",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
              },
              "azuremonitorlogs": {
                "connectionId": "[parameters('logAnalyticsQueryConnectionId')]",
                "connectionName": "azuremonitorlogs",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('enrichmentEngineName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('managedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceName": {
              "defaultValue": "[parameters('ctiWorkspaceName')]",
              "type": "String"
            },
            "maxRetryCount": {
              "defaultValue": "[parameters('maxRetryCount')]",
              "type": "Int"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 6
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Get_Recent_Indicators": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "CTI_ThreatIntelIndicator_CL \n| where TimeGenerated > ago(6h)\n| where Active_b == true and isempty(EnrichmentStatus_s)\n| project Type_s, Value_s, IndicatorId_g\n| limit 100",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/queryData",
                "queries": {
                  "resourcegroups": "[resourceGroup().name]",
                  "resourcename": "@{parameters('workspaceName')}",
                  "resourcetype": "Log Analytics Workspace",
                  "subscriptions": "[subscription().subscriptionId]",
                  "timerange": "Last 6 hours"
                }
              },
              "retryPolicy": {
                "type": "fixed",
                "count": "@parameters('maxRetryCount')",
                "interval": "PT10S"
              }
            },
            "Process_Enrichment": {
              "runAfter": {
                "Get_Recent_Indicators": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "// Enrichment system telemetry\n@{utcNow()},Enrichment processed @{length(body('Get_Recent_Indicators').tables[0].rows)} indicators",
                "headers": {
                  "Log-Type": "CTI_TelemetryData_CL"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/api/logs"
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[parameters('logAnalyticsConnectionId')]",
                "connectionName": "azureloganalyticsdatacollector",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureloganalyticsdatacollector')]"
              },
              "azuremonitorlogs": {
                "connectionId": "[parameters('logAnalyticsQueryConnectionId')]",
                "connectionName": "azuremonitorlogs",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuremonitorlogs')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[concat(variables('inoculationEngineName'), '-diagnostics')]",
      "scope": "[resourceId('Microsoft.Logic/workflows', variables('inoculationEngineName'))]",
      "properties": {
        "workspaceId": "[parameters('ctiWorkspaceId')]",
        "logs": [
          {
            "category": "WorkflowRuntime",
            "enabled": true,
            "retentionPolicy": {
              "days": "[parameters('diagnosticSettingsRetentionDays')]",
              "enabled": true
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": "[parameters('diagnosticSettingsRetentionDays')]",
              "enabled": true
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('inoculationEngineName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[concat(variables('triageEngineName'), '-diagnostics')]",
      "scope": "[resourceId('Microsoft.Logic/workflows', variables('triageEngineName'))]",
      "properties": {
        "workspaceId": "[parameters('ctiWorkspaceId')]",
        "logs": [
          {
            "category": "WorkflowRuntime",
            "enabled": true,
            "retentionPolicy": {
              "days": "[parameters('diagnosticSettingsRetentionDays')]",
              "enabled": true
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": "[parameters('diagnosticSettingsRetentionDays')]",
              "enabled": true
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('triageEngineName'))]"
      ]
    },
    {
      "type": "Microsoft.Portal/dashboards",
      "apiVersion": "2020-09-01-preview",
      "name": "[variables('dashboardName')]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('hidden-title', 'CTI Dashboard V5'))]",
      "properties": {
        "lenses": [
          {
            "order": 0,
            "parts": [
              {
                "position": {
                  "x": 0,
                  "y": 0,
                  "colSpan": 18,
                  "rowSpan": 1
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "# Central Threat Intelligence v5.0 - Operational Dashboard\nThis dashboard provides real-time monitoring of the threat intelligence processing pipeline, distribution status, and system health.",
                        "title": "",
                        "subtitle": "",
                        "markdownSource": 1
                      }
                    }
                  }
                }
              }
            ]
          }
        ],
        "metadata": {
          "model": {
            "timeRange": {
              "value": {
                "relative": {
                  "duration": 24,
                  "timeUnit": 1
                }
              },
              "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "inoculationEngineName": {
      "type": "string",
      "value": "[variables('inoculationEngineName')]"
    },
    "triageEngineName": {
      "type": "string",
      "value": "[variables('triageEngineName')]"
    },
    "approvalWorkflowName": {
      "type": "string",
      "value": "[variables('approvalWorkflowName')]"
    },
    "enrichmentEngineName": {
      "type": "string",
      "value": "[variables('enrichmentEngineName')]"
    },
    "dashboardId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Portal/dashboards', variables('dashboardName'))]"
    }
  }
}
